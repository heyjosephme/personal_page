---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { enhanceBlogPosts } from "@/lib/blog-helpers";
import { CalendarIcon } from "lucide-react";
import { RiFolderOpenLine } from "@remixicon/react";
import { Badge } from "@/components/ui/badge";
import { RecentlyUpdated } from "@/components/RecentlyUpdated";
import { TrendingTags } from "@/components/TrendingTags";
import type { GetStaticPaths } from "astro";

// Get all posts and their paths
export const getStaticPaths = (async () => {
  const allPosts = await getCollection("blog");
  const posts = import.meta.env.DEV
    ? allPosts
    : allPosts.filter((post) => !post.data.draft);

  const enhancedPosts = await enhanceBlogPosts(posts);

  return enhancedPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post, allPosts: enhancedPosts },
  }));
}) satisfies GetStaticPaths;

// Get the current post
const { post, allPosts } = Astro.props;
const { Content } = await post.render();

// Sort by update time for sidebar
const recentlyUpdated = [...allPosts].sort((a, b) => {
  return (
    new Date(b.timestamps.updatedAt).getTime() -
    new Date(a.timestamps.updatedAt).getTime()
  );
});

// Format date helper
function formatDate(dateStr: string) {
  const date = new Date(dateStr);
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  });
}
---

<Layout
  title={`${post.data.title} - Joseph Ju`}
  description={post.data.description}
>
  <div class="px-4 py-24 mx-auto max-w-7xl">
    <div class="flex flex-col md:flex-row gap-8">
      <!-- Main content - increased width -->
      <article class="w-full md:w-4/5">
        <div class="prose dark:prose-invert max-w-none">
          <h1 class="mb-4">{post.data.title}</h1>

          <div
            class="flex flex-wrap items-center gap-4 text-sm text-muted-foreground mb-8"
          >
            <div class="flex items-center gap-1">
              <CalendarIcon className="w-4 h-4" />
              <time>{formatDate(post.timestamps.createdAt)}</time>
            </div>

            {
              post.data.categories && post.data.categories.length > 0 && (
                <div class="flex items-center gap-2">
                  <RiFolderOpenLine className="w-4 h-4" />
                  <div class="flex flex-wrap gap-1">
                    {post.data.categories.map((category) => (
                      <Badge
                        variant="secondary"
                        className="text-xs hover:bg-secondary/80 transition-colors"
                      >
                        <a
                          href={`/category/${category.toLowerCase()}`}
                          class="hover:text-primary"
                        >
                          {category}
                        </a>
                      </Badge>
                    ))}
                  </div>
                </div>
              )
            }
          </div>

          {
            post.data.description && (
              <p class="text-xl text-muted-foreground mb-8">
                {post.data.description}
              </p>
            )
          }

          <Content />
        </div>
      </article>

      <!-- Sidebar - reduced width -->
      <div class="w-full md:w-1/5 space-y-6">
        <RecentlyUpdated
          posts={recentlyUpdated}
          currentSlug={post.slug}
          client:visible
        />
        <TrendingTags posts={allPosts} />
      </div>
    </div>
  </div>
</Layout>

<style is:global>
  .prose {
    max-width: none;
  }
  .prose img {
    margin: 2rem auto;
  }
</style>
